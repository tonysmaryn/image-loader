{"version":3,"sources":["upload.js","app.js"],"names":["bytesToSize","bytes","i","parseInt","Math","floor","log","round","pow","upload","selector","options","files","input","document","querySelector","preview","createElement","classList","add","openButton","textContent","multi","setAttribute","accept","Array","isArray","join","insertAdjacentElement","addEventListener","click","event","target","length","from","innerHTML","forEach","file","type","match","reader","FileReader","onload","ev","insertAdjacentHTML","name","result","size","readAsDataURL","dataset","filter","block","closest","setTimeout","remove"],"mappings":";AAmFC,aAnFD,SAASA,EAAYC,GAEb,IAACA,EACM,MAAA,UAELC,IAAAA,EAAIC,SAASC,KAAKC,MAAMD,KAAKE,IAAIL,GAASG,KAAKE,IAAI,QAClDF,OAAAA,KAAKG,MAAMN,EAAQG,KAAKI,IAAI,KAAMN,IAAM,IALjC,CAAC,QAAS,KAAM,KAAM,KAAM,MAKiBA,GAGxD,SAASO,EAAOC,GAAUC,IAAAA,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GACnCC,EAAQ,GACNC,EAAQC,SAASC,cAAcL,GAE/BM,EAAUF,SAASG,cAAc,OACvCD,EAAQE,UAAUC,IAAI,WAGhBC,IAAAA,EAAaN,SAASG,cAAc,UAC1CG,EAAWF,UAAUC,IAAI,OACzBC,EAAWC,YAAc,UAErBV,EAAQW,OACRT,EAAMU,aAAa,YAAY,GAG/BZ,EAAQa,QAAUC,MAAMC,QAAQf,EAAQa,SACxCX,EAAMU,aAAa,SAAUZ,EAAQa,OAAOG,KAAK,MAGrDd,EAAMe,sBAAsB,WAAYZ,GACxCH,EAAMe,sBAAsB,WAAYR,GAkDxCA,EAAWS,iBAAiB,QAhDP,WAAMhB,OAAAA,EAAMiB,UAiDjCjB,EAAMgB,iBAAiB,SA/CD,SAACE,GACdA,EAAMC,OAAOpB,MAAMqB,SAIxBrB,EAAQa,MAAMS,KAAKH,EAAMC,OAAOpB,OAEhCI,EAAQmB,UAAY,GACpBvB,EAAMwB,QAAQ,SAAAC,GACN,GAACA,EAAKC,KAAKC,MAAM,SAAjB,CAIEC,IAAAA,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,SAAAC,GACZ3B,EAAQ4B,mBAAmB,aAEsBP,+FAAAA,OAAAA,EAAKQ,KAClCF,uDAAAA,OAAAA,EAAGX,OAAOc,OAEVT,+FAAAA,OAAAA,EAAKQ,KACL7C,+CAAAA,OAAAA,EAAYqC,EAAKU,MANrC,yEAYJP,EAAOQ,cAAcX,SAoB7BrB,EAAQa,iBAAiB,QAfH,SAACE,GACf,GAACA,EAAMC,OAAOiB,QAAQJ,KAAtB,CAIIA,IAAAA,EAASd,EAAMC,OAAOiB,QAAtBJ,KACRjC,EAAQA,EAAMsC,OAAO,SAAAb,GAAQA,OAAAA,EAAKQ,OAASA,IAErCM,IAAAA,EAAQnC,EAAQD,cAA6B8B,eAAAA,OAAAA,EAAUO,OAAAA,QAAQ,kBACrED,EAAMjC,UAAUC,IAAI,YACpBkC,WAAW,WAAMF,OAAAA,EAAMG,UAAU,QAMxC,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA;;ACjFD,aAFA,IAAA,EAAA,QAAA,aAEA,EAAO,EAAA,QAAA,QAAS,CACZhC,OAAO,EACPE,OAAQ,CAAC,OAAQ,OAAQ,QAAS","file":"app.1ad36da6.js","sourceRoot":"..","sourcesContent":["function bytesToSize(bytes) {\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    if (!bytes) {\r\n        return '0 bytes';\r\n    }\r\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n    return Math.round(bytes / Math.pow(1024, i)) + ' ' + sizes[i];\r\n}\r\n\r\nexport function upload(selector, options = {}) {\r\n    let files = [];\r\n    const input = document.querySelector(selector);\r\n\r\n    const preview = document.createElement('div');\r\n    preview.classList.add('preview');\r\n\r\n\r\n    const openButton = document.createElement('button');\r\n    openButton.classList.add('btn');\r\n    openButton.textContent = 'Открыть';\r\n\r\n    if (options.multi) {\r\n        input.setAttribute('multiple', true);\r\n    }\r\n\r\n    if (options.accept && Array.isArray(options.accept)) {\r\n        input.setAttribute('accept', options.accept.join(','));\r\n    }\r\n\r\n    input.insertAdjacentElement('afterend', preview);\r\n    input.insertAdjacentElement('afterend', openButton);\r\n\r\n    const triggerInput = () => input.click();\r\n\r\n    const changeHandler = (event) => {\r\n        if (!event.target.files.length) {\r\n            return;\r\n        }\r\n\r\n        files = Array.from(event.target.files);\r\n\r\n        preview.innerHTML = '';\r\n        files.forEach(file => {\r\n            if (!file.type.match('image')) {\r\n                return;\r\n            }\r\n\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = ev => {\r\n                preview.insertAdjacentHTML('afterbegin',\r\n                    `<div class=\"preview-image\">\r\n                        <div class=\"preview-remove\" data-name=\"${file.name}\">&times;</div>\r\n                        <img src=\"${ev.target.result}\"/>\r\n                        <div class=\"preview-info\">\r\n                            <span>${file.name}</span>\r\n                            <span>${bytesToSize(file.size)}</span>\r\n                        </div>\r\n                    </div>`\r\n                );\r\n            }\r\n\r\n            reader.readAsDataURL(file);\r\n        });\r\n\r\n    }\r\n\r\n    const removeHandler = (event) => {\r\n        if (!event.target.dataset.name) {\r\n            return\r\n        }\r\n\r\n        const { name } = event.target.dataset;\r\n        files = files.filter(file => file.name !== name);\r\n\r\n        const block = preview.querySelector(`[data-name=\"${name}\"]`).closest('.preview-image');\r\n        block.classList.add('removing');\r\n        setTimeout(() => block.remove(), 300);\r\n    }\r\n\r\n    openButton.addEventListener('click', triggerInput);\r\n    input.addEventListener('change', changeHandler);\r\n    preview.addEventListener('click', removeHandler);\r\n}","import { upload } from './upload';\r\n\r\nupload('#file', {\r\n    multi: true,\r\n    accept: ['.png', '.jpg', '.jpeg', '.gif'],\r\n});"]}